.poi_defaults 0

poi 103
#!/usr/bin/env ruby

require 'rubygems'
require 'fileutils'
require 'mustache'
require 'json'
require 'optparse'
require 'open-uri'

POI_DEFAULTS = ".poi_defaults"

options = {}

optparser = OptionParser.new do |opts|

    opts.banner = "Usage: poi -f [FILE / URL] [-d]"

    opts.on('-f', '--file FILE / URL', 'Generate using .poi file.') do |file|
        options[:file] = file
    end

    opts.on('-d', '--delete', 'Delete all generated file') do 
        options[:delete] = true
    end

    opts.on('-p', '--pack [PACK]', 'Pack .poipack file into .poi') do |pack|
        options[:pack] = pack || '.poipack'
    end

    opts.on('-t', '--target TARGET', 'Packaging target') do |target|
        options[:target] = target
    end

    opts.on('-h', '--help', "Print help message") do 
        options[:help] = true
        puts opts
    end
end

optparser.parse!

if (options[:pack])
    target = options[:target] ? File.open(options[:target], "w") : STDOUT
    if (File.exists?(options[:pack]))
        File.readlines(options[:pack]).map {|l| l.strip }.map {|l| Dir.glob(l)}.flatten
            .tap {|fs| fs.insert(0, POI_DEFAULTS) if File.exists?(POI_DEFAULTS) and !fs.include?(POI_DEFAULTS)}
            .select {|l| l != options[:target]}.each do |l|
                file = l.strip
                content = File.readlines(file)
                target.puts("#{file} #{content.size}")
                target.puts(content.join) if (!content.empty?)
                target.puts
            end
    end
    target.puts(".")
    target.close if target != STDOUT
    exit
end

if (!options[:file])
    puts optparser if (!options[:help])
    exit
end

def parents(path)
    segs = path.split("/")
    parent_segs = segs[0...-1];

    if (parent_segs.empty?)
        return "."
    end
    return parent_segs.join("/")
end

lines = open(options[:file]).readlines
data = {};
x = 0;

while lines[x].strip != '.' && x < lines.size do
    data = JSON.load(File.read(POI_DEFAULTS)) if File.exists? POI_DEFAULTS
    data.merge!(JSON.load(File.read(".poi_vars"))) if File.exists? ".poi_vars"
    line = lines[x].strip
    if (line =~ /^(.+)\s(\d+)$/)
        file = $1.strip
        size = $2.to_i
        texts = lines[x+1, size]
        parent = parents(file);
        FileUtils.mkdir_p(parent)
        if (options[:delete])
            File.delete(file) if File.exists?(file)
            while (parent.size >= 0 && Dir.open(parent).count <= 2) do
                Dir.delete(parent)
                parent = parents(parent)
            end
        else
            File.open(file, "w") do |f|
                f << Mustache.render(texts.join, data)
            end
        end
        x += size
    end
    x += 1
end

.
